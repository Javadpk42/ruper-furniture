<%-include("../userlayouts/header.ejs")-%>
	<style>
		.coupon-box {
			max-height: 160px;
			/* Set the desired height */
			overflow-y: auto;
		}

		.coupon-scroll-box {
			padding-right: 10px;
			/* Add some padding to prevent scrollbar overlap */
		}


	</style>

	<div id="site-main" class="site-main">
		<div id="main-content" class="main-content">
			<div id="primary" class="content-area">
				<div id="title" class="page-title">
					<div class="section-container">
						<div class="content-title-heading">
							<h1 class="text-title-heading">
								Checkout
							</h1>
						</div>
						<div class="breadcrumbs">
							<a href="/">Home</a><span class="delimiter"></span><a href="/shop">Shop</a><span
								class="delimiter"></span>Checkout
						</div>
					</div>
				</div>

				<div id="content" class="site-content" role="main">
					<div class="section-padding">
						<div class="section-container p-l-r">
							<div class="shop-checkout">





								<div class="shipping-fields">
									<p class="form-row form-row-wide ship-to-different-address">
										<label class="checkbox">
											<input class="input-checkbox" type="checkbox"
												name="ship_to_different_address" value="1">
											<span>Ship to a different address?/Add an address for delivery</span>
										</label>
									</p>
									<div class="shipping-address">
										<form class="edit-account" action="/add_shipping_address" method="post"
											onsubmit="return validAddress()">
											<p class="form-row">
												<input type="text" class="input-text" name="fullname" id="fullName"
													placeholder="Full Name">
											<p class="error-message" id="name-error"></p>
											</p>
											<p class="form-row">
												<input type="text" class="input-text" name="mobile" id="phone"
													placeholder="Mobile">
											<p class="error-message" id="mobile-error"></p>
											</p>
											<div class="clear"></div>
											<p class="form-row">
												<input type="text" class="input-text" name="housename" id="housename"
													placeholder="House Name">
											<p class="error-message" id="housename-error"></p>
											</p>
											<p class="form-row">
												<input type="text" class="input-text" name="pin" id="pinCode"
													placeholder="Pincode">
											<p class="error-message" id="pincode-error"></p>
											</p>
											<p class="form-row">
												<input type="text" class="input-text" name="city" id="city"
													placeholder="City">
											<p class="error-message" id="city-error"></p>
											</p>
											<p class="form-row">
												<input type="text" class="input-text" name="district" id="district"
													placeholder="District">
											<p class="error-message" id="district-error"></p>
											</p>
											<p class="form-row">
												<input type="text" class="input-text" name="state" id="state"
													placeholder="State">
											<p class="error-message" id="state-error"></p>
											</p>
											<div class="clear"></div>

											<p class="form-row">
												<button type="submit" class="button" name="save_account_details"
													value="Save changes">Save address</button>
											</p>

										</form>

									</div>
								</div>






								<div class="row">
									<div class="col-xl-8 col-lg-7 col-md-12 col-12">
										<div class="customer-details">



											<div class="addresses">
												<% if (addresses && addresses.length> 0) { %>
													<% addresses.reverse().forEach((addressItem, index)=> { %>
														<div class="addresses-col" style="float: left; width: 50%;">
															<input type="radio" name="selected_address"
																value="<%= addressItem._id %>" <%=index===0 ? 'checked'
																: '' %>>
															<header class="col-title">
																<a class="edit text-danger"
																	href="/edit_address_checkout/<%= addressItem._id %>">Edit</a>
															</header>
															<address>
																<%= addressItem.fullname %><br>
																	Mobile: <%= addressItem.mobile %><br>
																		<%= addressItem.housename %><br>
																			<%= addressItem.city %>, <%=
																					addressItem.state %>, <%=
																						addressItem.district %><br>
																						Pin: <%= addressItem.pin %><br>
															</address>
														</div>
														<% if ((index + 1) % 2===0) { %>
															<div style="clear: both;"></div>
															<% } %>
																<% }); %>
																	<% } else { %>
																		<p>No addresses found.</p>
																		<% } %>
											</div>


										</div>

									</div>
									<div class="col-xl-4 col-lg-5 col-md-12 col-12 ">
										<div class="checkout-review-order">
											<div class="checkout-review-order-table">
												<div class="review-order-title">Product</div>


												<div class="cart-items">
													<% if (cart && cart.products && cart.products.length> 0) { %>
														<% cart.products.forEach(product=> { %>

															<div class="cart-item">
																<div class="info-product">
																	<div class="product-thumbnail">
																		<img width="600" height="600"
																			src="/public/products/images/<%= product.productId.images.image1 %>"
																			alt="">
																	</div>
																	<div class="product-name">
																		<%= product.productId.product_name %>
																			<strong class="product-quantity">QTY :
																				<%= product.quantity %>
																			</strong>
																	</div>
																</div>
																<div class="product-total">
																	<% if (product.productId.discountedAmount> 0) { %>
																		<span class="price">
																			<del aria-hidden="true"><span
																					class="text-danger">&#8377;<%=
																						product.productId.product_price.toFixed(2)
																						%></span></del>
																			<ins><span>&#8377;<%=
																						product.productId.discountedAmount.toFixed(2)
																						%></span></ins>
																		</span>
																		<% } else { %>
																			<span class="price">&#8377;<%=
																					product.productId.product_price.toFixed(2)
																					%></span>
																			<% } %>
																</div>
															</div>
															<% }); %>
																<% } else { %>
																	<p>No items in the cart.</p>
																	<% } %>
												</div>
												<br>
												<h5>Apply coupon</h5>
											
											<form id="couponForm" action="/apply-coupon" method="post">
												<div class="input-box-div input-group">
												  <% if (appliedCoupon) { %>
													<input name="couponCode" type="text" class="form-control coupon-code-input" id="couponCodeInput" placeholder="Applied Coupon" value="<%= appliedCoupon %>" readonly>
													<div class="input-group-append">
													  <button type="button" onclick="removeCoupon()" class="btn btn-dark apply-button" aria-label="Remove">Remove</button>
													</div>
												  <% } else { %>
													<input name="couponCode" type="text" class="form-control coupon-code-input" id="couponCodeInput" placeholder="Enter coupon code" value="" >
													<div class="input-group-append">
													  <button type="submit" class="btn btn-dark apply-button" aria-label="Apply">Apply</button>
													</div>
												  <% } %>
												</div>
											  </form>
											  
											

												<br>
												<div class="voucher-list">
													<div class="fixed-header" style="position: fixed;">
														<!-- Header content -->
													</div>
													<div class="input-area" style="position: fixed; top: 50px;">
														<!-- Input box for coupon -->
													</div>
													<div class="content">
														<div class="validCoupons">
															<div class="coupon-box">
																<div class="coupon-scroll-box">
																	<ul class="rilrtl-list">
																		<h6>Available Coupons</h6>
																		<% if (coupons.length > 0) { %>
																		<% coupons.forEach(coupon => { %>
																			<div class="voucher-list-item card bg-light text-dark">
																				<div class="card-body" onclick="selectRadio('<%= coupon.code %>')">
																					<div class="d-flex justify-content-between align-items-center">
																					  <div class="custom-control custom-radio">
																						<input type="radio" id="<%= coupon.code %>" name="vouchers" class="custom-control-input offer-radio" value="<%= coupon.code %>">
																						<label class="custom-control-label" for="<%= coupon.code %>"></label>
																					  </div>
																					  <a href="/faq" class="terms-condition text-danger" aria-label="View T & C">View T & C</a>
																					</div>
																					<div class="detail-info mt-3">
																					  <p class="card-text">
																						<%= coupon.code %> <br>
																						Get up to Extra <%= coupon.discountPercentage %> Off on <%= coupon.minPurchaseAmount %> and Above. <br>
																						Valid from <%= new Date(coupon.startDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) %> 
																						to <%= new Date(coupon.expireDate).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }) %>.
																					  </p>
																					</div>
																				  </div>
																			</div>
																			
																		<% }); %>
																		<% } else { %>
																			<div class="no-coupon-message text-warning">
																				No Coupons Available
																			</div>
																		<% } %>
																	</ul>
																</div>
															</div>
															
														</div>
													</div>
												</div>





												<div class="cart-subtotal">
													<h2>Subtotal</h2>
													<div class="subtotal-price">
														<span>&#8377; <%= total.toFixed(2)%></span>
													</div>
												</div>



												<% if (appliedCoupon) { %>

													<div class="order-total">

														<h2>Coupon savings</h2>
														<div class="total-price">


															<strong>

																<span>&#8377; <%= (total * discount / 100).toFixed(2) %></span>

															</strong>


														</div>
													</div>


													<% } %>



														<div class="order-total">

															<h2>Total</h2>
															<div class="total-price">


																<strong>

																	<span>&#8377; <%= updatedTotal ? updatedTotal.toFixed(2) :
																			total.toFixed(2) %></span>
																	<input type="hidden" name="totalAmount"
																		value="<%= updatedTotal ? updatedTotal : total.toFixed(2) %>">
																</strong>


															</div>
														</div>




											</div>
											<div id="payment" class="checkout-payment">
												<ul class="payment-methods methods custom-radio">
													<li class="payment-method">
														<input type="radio" class="input-radio" name="payment_method"
															value="Wallet" checked="checked">
														<label for="payment_method_bacs">Wallet</label>
														<div class="payment-box">
															<p>Pay via Wallet</p>
														</div>
													</li>
													<li class="payment-method">
														<input type="radio" class="input-radio" name="payment_method"
															value="Razorpay">
														<label>Razorpay</label>
														<div class="payment-box">
															<p>Pay via Razorpay; you can pay with your wallet/COD if
																you don’t have a account.</p>
														</div>
													</li>
													<li class="payment-method">
														<input type="radio" class="input-radio" name="payment_method"
															value="COD">
														<label>Cash on delivery</label>
														<div class="payment-box">
															<p>Pay with cash upon delivery.</p>
														</div>
													</li>
													<!-- <li class="payment-method">
															<input type="radio" class="input-radio"
																name="payment_method" value="paypal">
															<label>PayPal</label>
															<div class="payment-box">
																<p>Pay via PayPal; you can pay with your credit card if
																	you don’t have a PayPal account.</p>
															</div>
														</li> -->
														
												</ul>
												
												<div class="form-row place-order">
													<div class="terms-and-conditions-wrapper">
														<div class="privacy-policy-text"></div>
													</div>

													<input type="hidden" id="razorpayOrderId" name="razorpayOrderId">


													<!-- Modify the Place Order button to trigger the Razorpay payment -->
													<button type="button" class="button alt" id="placeOrderButton">Place
														order</button>

												</div>
											</div>
										</div>
									</div>
								</div>








							</div>
						</div>
					</div>
				</div><!-- #content -->
			</div><!-- #primary -->
		</div><!-- #main-content -->
	</div>
	<!-- Add the Razorpay script at the end of the body -->




	<script>





		function placeOrder() {
			const placeOrderBtn = document.getElementById('placeOrderButton');

			placeOrderBtn.addEventListener('click', async function (event) {
				event.preventDefault();

				try {
					console.log('Place Order button clicked');

					const selectedAddress = document.querySelector('input[name="selected_address"]:checked');
					console.log('selectedAddress:', selectedAddress);

					const paymentMethodRadio = document.querySelector('input[name="payment_method"]:checked');
					console.log('paymentMethodRadio:', paymentMethodRadio);

					if (!selectedAddress) {
						throw new Error('Address not selected');
					}

					if (!paymentMethodRadio) {
						throw new Error('Payment method not selected');
					}

					const addressId = selectedAddress.value;
					const paymentMethod = paymentMethodRadio.value;

					console.log('Selected Address:', addressId);
					console.log('Payment Method:', paymentMethod);

					const data = {
						address: addressId,
						payment: paymentMethod
					};

					console.log('Sending request to /placeOrder with data:', data);

					const response = await fetch('/placeOrder', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify(data)
					});

					console.log('response', response);

					let responseData; // Declare a variable to store response data

					try {
						if (response.ok) {
							const contentType = response.headers.get('content-type');
							if (contentType && contentType.includes('application/json')) {
								responseData = await response.json();
								console.log('Response Data:', responseData);

								if (paymentMethod === 'Razorpay') {
									razorPayment(responseData.order);
								} else {
									window.location.href = "/orderplaced";
								}
							} else {
								throw new Error('Response was not in JSON format');
							}
						} else {
							responseData = await response.json();
							console.log('Response Data (Error):', responseData);

							if (responseData.error === 'Insufficient wallet balance') {
								throw new Error('Insufficient wallet balance');
							} else {
								razorPayment(responseData.order);

								if (paymentMethod !== 'Razorpay') {
									window.location.href = '/otherPaymentPage';
								}
							}
						}
					} catch (error) {
						console.error('There was an error during order placement:', error);

						if (error.message === 'Address not selected') {
							Swal.fire('Error', 'Please add an address', 'error');
						} else if (error.message === 'Payment method not selected') {
							Swal.fire('Error', 'Please select a payment method', 'error');
						} else if (error.message === 'Insufficient wallet balance') {
							Swal.fire('Error', 'Insufficient wallet balance', 'error');
						} else {
							Swal.fire('Order Placement Error', 'An error occurred during order placement', 'error');
						}
					}
				} catch (error) {
					console.error('Unexpected error:', error);
				}
			});
		}

		placeOrder();

		const razorpayKeyId = '<%= razorpayKeyId %>';
		function razorPayment(order) {
			console.log('Razorpay Order:', order);

			var options = {
				key: razorpayKeyId,
				amount: order.amount,
				currency: "INR",
				name: "Ruper",
				description: "Test Transaction",
				image: "/public/usernew/media/logo.png",
				order_id: order.id,
				handler: function (response) {
					console.log('Razorpay Response:', response);
					verifyPayment(response, order);
				},
				prefill: {
					name: "Ruper",
					email: "ruper@example.com",
					contact: "9847378466"
				},
				notes: {
					address: "Razorpay Corporate Office",
				},
				theme: {
					color: "#3399cc"
				},
			};

			var rzp1 = new Razorpay(options);
			rzp1.open();
		}


		function verifyPayment(payment, order) {
			console.log('h');
			$.ajax({
				url: "/verifyPayment",
				method: "post",
				data: {
					payment: payment,
					order: order,
				},
				success: (response) => {
					console.log('Verification Response:', response);
					if (response.codsuccess == true) {
						window.location.href = "/orderplaced";

					} else {
						swal.fire({
							position: "center",
							icon: "error",
							title: "Payment failed",
							showConfirmButton: false,
							timer: 1500,
						});
					}
				}
			});
		}


	</script>



<script>
	function selectRadio(couponCode) {
	  const radio = document.getElementById(couponCode);
	  if (radio) {
		radio.checked = true;
	  }
	}
  </script>



<script>
	$(document).ready(function () {
	  $('.card-body').on('click', function () {
		var selectedCouponCode = $(this).find('input[name="vouchers"]').val();
		$('#couponCodeInput').val(selectedCouponCode);
	  });
  
	  // Optional: Prevent radio button change when clicking on the div
	  $('input[name="vouchers"]').on('change', function (event) {
		event.stopPropagation();
	  });
	});
  </script>
  


<script>
	

  
	async function removeCoupon() {
  try {
    const response = await fetch('/remove-coupon', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    });

    // Check if the response status is a successful redirect (status 300-399)
    if (response.ok || (response.status >= 300 && response.status < 400)) {
      // Redirect to the specified location
      window.location.href = response.url;
    } else {
      const data = await response.json();

      Swal.fire({
        position: 'center',
        icon: 'error',
        title: data.message || 'Failed to remove coupon',
        showConfirmButton: true,
      });
    }
  } catch (error) {
    console.error('Error:', error);
    Swal.fire({
      position: 'center',
      icon: 'error',
      title: 'An error occurred. Please try again later.',
      showConfirmButton: true,
    });
  }
}

  </script>




	<script>
		function validAddress() {
			const name = document.getElementById('fullName').value;
			const mobile = document.getElementById('phone').value;
			const state = document.getElementById('state').value;
			const district = document.getElementById('district').value;
			const city = document.getElementById('city').value;
			const pincode = document.getElementById('pinCode').value;

			document.getElementById('name-error').textContent = '';
			document.getElementById('state-error').textContent = '';
			document.getElementById('mobile-error').textContent = '';
			document.getElementById('district-error').textContent = '';
			document.getElementById('city-error').textContent = '';
			document.getElementById('pincode-error').textContent = '';

			if (!name) {
				document.getElementById('name-error').textContent = 'Name field should not be empty!';
				return false;
			}
			const mobileRegex = /^[6-9]\d{9}$/;

			if (!mobile || !mobileRegex.test(mobile)) {
				document.getElementById('mobile-error').textContent = 'Mobile number should be a 10-digit valid number';
				return false;
			}

			if (new Set(mobile).size === 1) {
				document.getElementById('mobile-error').textContent = 'Mobile number should not consist of the same digit.';
				return false;
			}

			if (!state) {
				document.getElementById('state-error').textContent = 'State field should not be empty!';
				return false;
			}


			if (!district) {
				document.getElementById('district-error').textContent = 'District field should not be empty!';
				return false;
			}

			if (!city) {
				document.getElementById('city-error').textContent = 'City field should not be empty!';
				return false;
			}

			const pincodeRegex = /^\d{6}$/;

			if (!pincode || !pincode.match(pincodeRegex)) {
				document.getElementById('pincode-error').textContent = 'Pincode should be a 6-digit numeric value.';
				return false;
			}

			return true;
		}

	</script>

	<style>
		.error-message {
			color: red;
		}
	</style>

	<%-include("../userlayouts/footer.ejs")-%>