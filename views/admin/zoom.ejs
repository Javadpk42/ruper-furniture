<!DOCTYPE html>
<!-- Design by foolishdeveloper.com -->
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Pure javascript image zoom </title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <style media="screen">
    figure.zoom {
  background-position: 50% 50%;
  position: relative;
  margin: 150px auto;
  border: 5px solid white;
  box-shadow: -1px 5px 15px black;
  height: 300px;
  width: 500px;
  overflow: hidden;
  cursor: zoom-in;
}
figure.zoom img:hover {
  opacity: 0;
}
figure.zoom img {
  transition: opacity 0.5s;
  display: block;
  width: 100%;
}
  </style>
  <title>Document</title>
</head>
<body>
  <figure class="zoom" onmousemove="zoom(event)" style="background-image: url(https://i.pinimg.com/originals/2b/de/de/2bdede0647e3cdf75b44ea33723201d9.jpg)">
  <img src="https://i.pinimg.com/originals/2b/de/de/2bdede0647e3cdf75b44ea33723201d9.jpg" />
</figure>
<script type="text/javascript">
function zoom(e){
  var zoomer = e.currentTarget;
  e.offsetX ? offsetX = e.offsetX : offsetX = e.touches[0].pageX
  e.offsetY ? offsetY = e.offsetY : offsetX = e.touches[0].pageX
  x = offsetX/zoomer.offsetWidth*100
  y = offsetY/zoomer.offsetHeight*100
  zoomer.style.backgroundPosition = x + '% ' + y + '%';
}
</script>
</body>
</html>




const removecategoryOffer = async (req, res) => {
  try {
    const categoryId = req.body.categoryId;

    // Find the category by ID
    const category = await Category.findById(categoryId);

    // Check if the category exists
    if (!category) {
      return res.status(404).json({ success: false, error: "Category not found" });
    }

    // Update category discount to 0
    category.discount = 0;
    await category.save();

    // Find all products in the category
    const products = await Product.find({ category: category.category_name });

    // Iterate through each product
    for (const product of products) {
      // Check if the product has an existing product offer
      if (product.discount > 0) {
        product.category_discount = 0;
        const originalPrice = product.product_price;
        const discountedAmount = calculateDiscountedPrice(originalPrice, product.discount);
        product.discountedAmount=discountedAmount
        await product.save();
      }

      // Reset the product's discount and discounted amount to 0
      product.discountedAmount = 0;
      product.category_discount = 0;
      await product.save();
    }

    res.json({ success: true });
  } catch (error) {
    console.log(error);
    res.status(500).json({ success: false, error: "Internal Server Error" });
  }
};



<!-- 
																	<form class="w-full" id="reviewForm">
																		<h5 class="mtext-108 cl2 p-b-7">
																			Add a review
																		</h5>
																		<input type="hidden" id="productId" name="productId" value="<%= product._id %>">
																		<input type="hidden" id="userId" name="userId" value="<%= userId %>">
																		<p class="stext-102 cl6">
																			Your email address will not be published. Required fields are marked *
																		</p>
																			<div class="flex-w flex-m p-t-5 p-b-23">
																				<span class="stext-102 cl3 m-r-16">
																					Your Rating
																				</span>
										
																				<span class="wrap-rating fs-18 cl11 pointer">
																					<i class="item-rating pointer zmdi zmdi-star-outline"></i>
																					<i class="item-rating pointer zmdi zmdi-star-outline"></i>
																					<i class="item-rating pointer zmdi zmdi-star-outline"></i>
																					<i class="item-rating pointer zmdi zmdi-star-outline"></i>
																					<i class="item-rating pointer zmdi zmdi-star-outline"></i>
																					<input class="dis-none" type="number" name="rating">
																				</span>
																		</div>
										
																		<div class="row p-b-25">
																			<div class="col-12 p-b-5">
																				<label class="stext-102 cl3" for="review">Your review</label>
																				<textarea class="size-110 bor8 stext-102 cl2 p-lr-20 p-tb-10" id="review" name="review"></textarea>
																			</div>
																		</div>
										
																		<div class="col-12">
																			<button class="flex-c-m stext-101 cl0 size-112 bg7 bor11 hov-btn3 p-lr-15 trans-04 m-b-10 submit-review-button">
																				Submit
																			</button>
																		</div>
																	</form> -->