
<%-include("../adminlayouts/header.ejs")-%>

<style>
  .image-preview img {
  max-width: 100%;
  max-height: 100%;
  border: 1px solid #ddd; /* Add a border for better visualization */
}

</style>

<aside class="sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3   bg-gradient-dark" id="sidenav-main">
  <div class="sidenav-header">
    <i class="fas fa-times p-3 cursor-pointer text-white opacity-5 position-absolute end-0 top-0 d-none d-xl-none" aria-hidden="true" id="iconSidenav"></i>
    <a class="navbar-brand m-0" href=" https://demos.creative-tim.com/material-dashboard/pages/dashboard " target="_blank">
      <img src="/public/admin/img/logo-white.png" class="navbar-brand-img h-100" alt="main_logo">
      <span class="ms-1 font-weight-bold text-white"></span>
    </a>
  </div>
  <hr class="horizontal light mt-0 mb-2">
  <!-- <div class="collapse navbar-collapse  w-auto  max-height-vh-100" id="sidenav-collapse-main"> -->
    <div class="" id="sidenav-collapse-main">

    <ul class="navbar-nav">
      <li class="nav-item">
        <a class="nav-link text-white " href="/admin/dashboard">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">dashboard</i>
          </div>
          <span class="nav-link-text ms-1">Dashboard</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white  " href="/admin/salesreport">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">receipt_long</i>
          </div>
          <span class="nav-link-text ms-1">Sales Report</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white  " href="/admin/customers">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">person</i>
          </div>
          <span class="nav-link-text ms-1">Customers</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white " href="/admin/categories">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">receipt_long</i>
          </div>
          <span class="nav-link-text ms-1">Categories</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white bg-gradient-primary " href="/admin/products">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">view_in_ar</i>
          </div>
          <span class="nav-link-text ms-1">Products</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white " href="/admin/orders">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">format_textdirection_r_to_l</i>
          </div>
          <span class="nav-link-text ms-1">Orders</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white " href="/admin/coupons">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">table_view</i>
          </div>
          <span class="nav-link-text ms-1">Coupons</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white " href="/admin/offer">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">assignment</i>
          </div>
          <span class="nav-link-text ms-1">Offers</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white " href="/admin/banner">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">notifications</i>
          </div>
          <span class="nav-link-text ms-1">Banners</span>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link text-white " href="/admin/logout">
          <div class="text-white text-center me-2 d-flex align-items-center justify-content-center">
            <i class="material-icons opacity-10">login</i>
          </div>
          <span class="nav-link-text ms-1">Logout</span>
        </a>
      </li>
     
    </ul>
  </div>
 
</aside>
  <main class="main-content position-relative max-height-vh-100 h-100 border-radius-lg ">
    <!-- Navbar -->
    <nav class="navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl" id="navbarBlur" navbar-scroll="true">
      <div class="container-fluid py-1 px-3">
       
        <div class="collapse navbar-collapse mt-sm-0 mt-2 me-md-0 me-sm-4" id="navbar">
      
          <ul class="navbar-nav  justify-content-end">
            
            <li class="nav-item d-xl-none ps-3 d-flex align-items-center">
              <a href="javascript:;" class="nav-link text-body p-0" id="iconNavbarSidenav">
                <div class="sidenav-toggler-inner">
                  <i class="sidenav-toggler-line"></i>
                  <i class="sidenav-toggler-line"></i>
                  <i class="sidenav-toggler-line"></i>
                </div>
              </a>
            </li>
            
          </ul>
        </div>
      </div>
    </nav>
    <!-- End Navbar -->
   



    <div class="main-panel">
      <div class="content-wrapper">
    
        <div class="col-12 grid-margin stretch-card">
          <div class="card">
            <div class="card-body">
              <h4 class="card-title">Edit Product</h4>
              


              <form class="forms-sample" action="/admin/editproduct?id=<%= product._id %>" method="post" enctype="multipart/form-data" id="editProductForm" onsubmit="return validateEditForm()">

                <div class="form-group row">
                  <div class="col-6 text-light">
                    <label for="exampleInputName1">Product Title</label>
                    <input type="text" class="form-control text-dark" name="product_name" value="<%= product.product_name %>" id="product_name" placeholder="Name" required>
                    <p id="product-name-error" class="error-message"></p>
                  </div>
                  <div class="col-6">
                    <label for="exampleInputName1">Price</label>
                    <input type="number" class="form-control text-dark" id="product_price" value="<%= product.product_price %>" name="product_price" placeholder="price" required>
                    <p id="product-price-error" class="error-message"></p>
                  </div>
                </div>
              
                <div class="row">
                  <div class="col-md-6">
                    <div class="form-group row">
                      <div class="col-sm-12">
                        <label class="col-sm-3 col-form-label">Categories</label>
                        <select name="categories" class="form-control text-dark" id="category" required>
                          <% categories.forEach(category => { %>
                            <option <%= product.category === category.category_name ? 'selected' : '' %> <%= category.is_listed ? '' : 'disabled' %>>
                              <%= category.category_name %>
                            </option>
                          <% }); %>
                        </select>
                        <p id="category-error" class="error-message"></p>
                      </div>
                    </div>
                  </div>
                  <div class="col-md-6">
                    <div class="form-group row">
                    </div>
                  </div>
                </div>
              
                <div class="row">
                  <div class="col-md-6">
                    <div class="form-group row">
                      <div class="col-sm-12">
                        <label class="col-sm-3 col-form-label">Number of Stock</label>
                        <input type="number" value="<%= product.stock %>" class="form-control text-dark" id="stock" name="stock" placeholder="Enter Stock" required>
                        <p id="stock-error" class="error-message"></p>
                      </div>
                    </div>
                  </div>
                </div>
              
                <div class="form-group mt-2">
                  <label for="exampleTextarea1">Description</label>
                  <textarea name="product_description" class="form-control text-dark" id="product_description" rows="6" required>
                      <%= product.product_description %>
                  </textarea>
                  <p id="product-description-error" class="error-message"></p>
                </div>
              
                <div class="row d-flex justify-content-center">
              
                  <!-- Image Upload 1 -->
                  <div class="col-lg-3">
                    <div class="rounded-image-preview">
                      <label for="imageInput1" class="image-label">Image 1
                        <div class="rounded-image-preview">
                          <img id="imagePreview1" src="/public/products/images/<%= product.images.image1 %>" alt="Preview" style="max-width: 50%; max-height: 50%;" />
                        </div>
                        <input name="image1" type="file" accept="image/*" id="imageInput1" class="imageInput" onchange="updateImagePreviewInstant(this, 'imagePreview1', 'removeButton1')">
                      </label>
                    </div>
                    <button type="button" style="display: none;" class="remove-button" id="removeButton1" onclick="removeImagePreview('imagePreview1', '/products/images/<%= product.images.image1 %>', 'removeButton1')">Remove</button>
                    <input type="hidden" id="croppedImageData1" name="croppedImageData1">
                    <p id="image-error1" class="text-danger"></p>
                    <p id="cropped-image-error1" class="text-danger"></p>
                  </div>
              
                  <!-- Image Upload 2 -->
                  <div class="col-lg-3">
                    <div class="rounded-image-preview">
                      <label for="imageInput2" class="image-label">Image 2
                        <div class="rounded-image-preview">
                          <img id="imagePreview2" src="/public/products/images/<%= product.images.image2 %>" alt="Preview" style="max-width: 50%; max-height: 50%;" />
                        </div>
                        <input name="image2" type="file" accept="image/*" id="imageInput2" class="imageInput" onchange="updateImagePreviewInstant(this, 'imagePreview2', 'removeButton2')">
                      </label>
                    </div>
                    <button type="button" style="display: none;" class="remove-button" id="removeButton2" onclick="removeImagePreview('imagePreview2', '/products/images/<%= product.images.image2 %>', 'removeButton2')">Remove</button>
                    <input type="hidden" id="croppedImageData2" name="croppedImageData2">
                    <p id="image-error2" class="text-danger"></p>
                    <p id="cropped-image-error2" class="text-danger"></p>
                  </div>
              
                  <!-- Image Upload 3 -->
                  <div class="col-lg-3">
                    <div class="rounded-image-preview">
                      <label for="imageInput3" class="image-label">Image 3
                        <div class="rounded-image-preview">
                          <img id="imagePreview3" src="/public/products/images/<%= product.images.image3 %>" alt="Preview" style="max-width: 50%; max-height: 50%;" />
                        </div>
                        <input name="image3" type="file" accept="image/*" id="imageInput3" class="imageInput" onchange="updateImagePreviewInstant(this, 'imagePreview3', 'removeButton3')">
                      </label>
                    </div>
                    <button type="button" style="display: none;" class="remove-button" id="removeButton3" onclick="removeImagePreview('imagePreview3', '/products/images/<%= product.images.image3 %>', 'removeButton3')">Remove</button>
                    <input type="hidden" id="croppedImageData3" name="croppedImageData3">
                    <p id="image-error3" class="text-danger"></p>
                    <p id="cropped-image-error3" class="text-danger"></p>
                  </div>
              
                  <!-- Image Upload 4 -->
                  <div class="col-lg-3">
                    <div class="rounded-image-preview">
                      <label for="imageInput4" class="image-label">Image 4
                        <div class="rounded-image-preview">
                          <img id="imagePreview4" src="/public/products/images/<%= product.images.image4 %>" alt="Preview" style="max-width: 50%; max-height: 50%;" />
                        </div>
                        <input name="image4" type="file" accept="image/*" id="imageInput4" class="imageInput" onchange="updateImagePreviewInstant(this, 'imagePreview4', 'removeButton4')">
                      </label>
                    </div>
                    <button type="button" style="display: none;" class="remove-button" id="removeButton4" onclick="removeImagePreview('imagePreview4', '/products/images/<%= product.images.image4 %>', 'removeButton4')">Remove</button>
                    <input type="hidden" id="croppedImageData4" name="croppedImageData4">
                    <p id="image-error4" class="text-danger"></p>
                    <p id="cropped-image-error4" class="text-danger"></p>
                  </div>
              
                </div>
              
                <button type="submit" class="btn btn-md btn-outline-primary mr-2 mt-5" id="editProductButton">Edit product</button>
              </form>
              
              
              


            </div>
          </div>
        </div>
    
    
      </div>
     
    </div>
    
    
    





      
    
    </div>
  </main>
  
  <!--   Core JS Files   -->
  <script src="/public/admin/js/core/popper.min.js"></script>
  <script src="/public/admin/js/core/bootstrap.min.js"></script>
  <script src="/public/admin/js/plugins/perfect-scrollbar.min.js"></script>
  <script src="/public/admin/js/plugins/smooth-scrollbar.min.js"></script>
  <script>
    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
      var options = {
        damping: '0.5'
      }
      Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }
  </script>
  <!-- Github buttons -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="/public/admin/js/material-dashboard.min.js?v=3.0.0"></script>

  <style>
    .crop-image {
      max-width: 15cm;
      max-height: 10cm;
      width: 100%; /* Ensure the image takes the full width of the container */
      height: auto; /* Maintain aspect ratio */
      display: inline-block;
      margin-right: 10px; /* Adjust as needed for spacing between crop boxes */
    }
  </style>

  <script defer>
    document.addEventListener('DOMContentLoaded', function () {
      if (typeof Cropper !== 'undefined') {
        var imageInputs = document.querySelectorAll('[id^="imageInput"]');
        var form = document.getElementById('editProductForm'); // Update the form ID
  
        imageInputs.forEach(function (input, index) {
          var cropper;
          var imgElement = document.createElement('img');
  
          // Add a class to the imgElement for styling
          imgElement.classList.add('crop-image');
  
          // Insert the imgElement after the input
          input.parentNode.insertBefore(imgElement, input.nextSibling);
  
          // Add a container for the preview
          var previewContainer = document.createElement('div');
          previewContainer.id = 'imagePreview' + (index + 1);
          previewContainer.classList.add('image-preview');
          input.parentNode.insertBefore(previewContainer, imgElement.nextSibling);
  
          input.addEventListener('change', function (e) {
            var files = e.target.files;
            if (files && files[0]) {
              var reader = new FileReader();
              reader.onload = function (event) {
                // Replace the src attribute of the imgElement with the selected image
                imgElement.src = event.target.result;
  
                // Initialize CropperJS with the imgElement
                cropper = new Cropper(imgElement, {
                  aspectRatio: 1,
                  viewMode: 2,
                  autoCropArea: 1,
                });
  
                // Adjust the position of the Cropper box after loading the image
                setTimeout(function () {
                  cropper.getCropBoxData().top += cropper.getCropBoxData().height * 0.3;
                  cropper.setCropBoxData(cropper.getCropBoxData());
                }, 100);
  
                // Prevent the default behavior of mousedown, mousemove, and touchmove events
                cropper.element.removeEventListener('mousedown', cropper._dragstart);
                cropper.element.removeEventListener('mousemove', cropper._dragmove);
                cropper.element.removeEventListener('touchmove', cropper._dragmove);
  
                // Prevent the default behavior of the input field during cropping
                input.addEventListener('click', function (event) {
                  event.preventDefault();
                });
  
                // Show a button to trigger saving the cropped image
                var saveButton = document.createElement('button');
                saveButton.innerText = 'Save Cropped Image';
                saveButton.addEventListener('click', function (event) {
                  event.preventDefault(); // Prevent the default form submission
  
                  // Get the cropped image data URL
                  var croppedImageData = cropper.getCroppedCanvas().toDataURL('image/jpeg');
                  console.log('Cropped Image Data:', croppedImageData);
  
                  // Set the cropped image data to the corresponding hidden input field
                  document.getElementById('croppedImageData' + (index + 1)).value = croppedImageData;
  
                  // Show the preview in the container
                  var previewImage = document.createElement('img');
                  previewImage.src = croppedImageData;
                  previewContainer.innerHTML = ''; // Clear previous content
                  previewContainer.appendChild(previewImage);
  
                  // Now, you can choose to submit the form or do other actions
                  // form.submit(); 
                });
  
                // Insert the save button after the imgElement
                imgElement.parentNode.insertBefore(saveButton, imgElement.nextSibling);
              };
  
              // Create a Blob from the file and read it as a data URL
              reader.readAsDataURL(new Blob([files[0]], { type: 'image/jpeg' }));
            }
          });
        });
  
        // Add an event listener to the "Edit Product" button to trigger the cropping process
        document.getElementById('editProductButton').addEventListener('click', function (event) {
          event.preventDefault(); // Prevent the default form submission
          if (validateEditForm()) {
            cropImagesAndSubmit(); // Trigger the cropping process
          }
        });
  
        function validateEditForm() {
    const productName = document.getElementById('product_name').value;
    const productPrice = document.getElementById('product_price').value;
    const stock = document.getElementById('stock').value;
    const productDescription = document.getElementById('product_description').value;
    const category = document.getElementById('category').value;

    // Clear previous error messages
    document.getElementById('product-name-error').textContent = '';
    document.getElementById('product-price-error').textContent = '';
    document.getElementById('stock-error').textContent = '';
    document.getElementById('product-description-error').textContent = '';
    document.getElementById('category-error').textContent = '';

    // Validate product name
    if (!productName) {
        document.getElementById('product-name-error').textContent = 'Product name should not be empty!';
        return false;
    }

    // Validate product price
    if (!productPrice || isNaN(productPrice) || parseFloat(productPrice) <= 0) {
        document.getElementById('product-price-error').textContent = 'Enter a valid product price.';
        return false;
    }

    // Validate stock
    if (!stock || isNaN(stock) || parseInt(stock) <= 0) {
        document.getElementById('stock-error').textContent = 'Enter a valid stock value.';
        return false;
    }

    // Validate product description
    if (!productDescription) {
        document.getElementById('product-description-error').textContent = 'Product description should not be empty!';
        return false;
    }

    // Validate category
    if (category === '' || category === null) {
        document.getElementById('category-error').textContent = 'Select a valid category.';
        return false;
    }

    // Continue with the rest of the validation logic for images and cropped images

    // Validate image files and cropped images
    // const imageInputs = document.querySelectorAll('input[type="file"]');
    // for (let i = 0; i < imageInputs.length; i++) {
    //     const imageInput = imageInputs[i];
    //     const imageError = document.getElementById(`image-error${i + 1}`);
    //     const croppedImageError = document.getElementById(`cropped-image-error${i + 1}`);
    //     const croppedImageData = document.getElementById(`croppedImageData${i + 1}`).value;

    //     if (!imageInput.files.length) {
    //         imageError.textContent = `Please upload Image ${i + 1}.`;
    //         return false;
    //     }

    //     // You can add additional image validation here if needed.

    //     // Validate cropped images
    //     if (!croppedImageData) {
    //         croppedImageError.textContent = `Please save Cropped Image ${i + 1}.`;
    //         return false;
    //     }

    //     // Clear the image errors if validation passes
    //     imageError.textContent = '';
    //     croppedImageError.textContent = '';
    // }

    return true; // Return true if validation passes, false otherwise
}

  
        // Function to crop images and submit the form
        function cropImagesAndSubmit() {
          // Iterate through each input and trigger cropping process
          imageInputs.forEach(function (input, index) {
            // Trigger the change event on each input
            input.dispatchEvent(new Event('change'));
          });
  
          // After all images are cropped, submit the form
          form.submit();
        }
  
      } else {
        console.error('CropperJS is not defined. Check the CDN script paths.');
      }
    });
  </script>
  
  <style>
    .error-message {
        color: red;
        font-size: 14px;
        margin-top: 5px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-weight: bold;
    }
  </style>


  <script>
    function updateImagePreviewInstant(input, previewId, removeButtonId) {
      const preview = document.getElementById(previewId);
      // const removeButton = document.getElementById(removeButtonId);

      const file = input.files[0];

      if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
          preview.src = e.target.result;
        };
        reader.readAsDataURL(file);
        removeButton.style.display = 'inline-block';
      } else {
        preview.src = '';
        removeButton.style.display = 'none';
      }
    }
  </script>


  <%-include("../adminlayouts/footer.ejs")-%>